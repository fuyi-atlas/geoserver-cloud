<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.geoserver.cloud.apps</groupId>
    <artifactId>gs-cloud-services</artifactId>
    <version>${revision}</version>
  </parent>
  <artifactId>gs-cloud-restconfig-v1</artifactId>
  <packaging>jar</packaging>
  <name>restconfig-service</name>
  <properties>
    <dockerfile.skip>false</dockerfile.skip>
    <docker.image.name>geoserver-cloud-rest</docker.image.name>
    <start-class>org.geoserver.cloud.restconfig.RestConfigApplication</start-class>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.geoserver.cloud</groupId>
      <artifactId>gs-cloud-starter-webmvc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver.cloud</groupId>
      <artifactId>gs-cloud-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver.cloud</groupId>
      <artifactId>gs-cloud-starter-vector-formats</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver.cloud</groupId>
      <artifactId>gs-cloud-starter-raster-formats</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver</groupId>
      <artifactId>gs-restconfig</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver</groupId>
      <artifactId>gs-restconfig-wcs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver</groupId>
      <artifactId>gs-restconfig-wfs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver</groupId>
      <artifactId>gs-restconfig-wms</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver.cloud</groupId>
      <artifactId>gs-cloud-starter-wms-extensions</artifactId>
    </dependency>

    <!-- 虽然 gs-restconfig和gs-gwc都已经被直接或间接的引入了, 但是为了明确表达用意, 这里还是显式的引入gs-restconfig-wmts-->
    <dependency>
      <groupId>org.geoserver</groupId>
      <artifactId>gs-restconfig-wmts</artifactId>
    </dependency>
    <!-- 引入 gwc与springboot的集成模块, 为了正确配置gwc功能 -->
    <dependency>
      <groupId>org.geoserver.cloud</groupId>
      <artifactId>gwc-cloud-spring-boot-starter</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <!-- here the phase you need -->
            <phase>validate</phase>
            <configuration>
              <outputDirectory>${basedir}/target/config</outputDirectory>
              <resources>
                <resource>
                  <directory>${maven.multiModuleProjectDirectory}/config/</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>docker</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>docker</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker-openj9</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>openj9</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>build-openj9-image</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <dockerfile>Dockerfile.openj9</dockerfile>
                  <tag>${project.version}-openj9</tag>
                  <buildArgs>
                    <TAG>${project.version}-openj9</TAG>
                    <JAR_FILE>target/${project.build.finalName}-bin.jar</JAR_FILE>
                  </buildArgs>
                </configuration>
              </execution>
              <execution>
                <id>push-openj9-image</id>
                <goals>
                  <goal>package</goal>
                </goals>
                <phase>install</phase>
                <configuration>
                  <skip>${dockerfile.push.skip}</skip>
                  <tag>${project.version}-openj9</tag>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>importer</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.geoserver.importer</groupId>
          <artifactId>gs-importer-rest</artifactId>
          <!-- exclude data formats, let them be managed by the ones explicitly imported by this module -->
          <exclusions>
            <exclusion>
              <groupId>org.geotools</groupId>
              <artifactId>gt-shapefile</artifactId>
            </exclusion>
            <exclusion>
              <groupId>org.geotools.jdbc</groupId>
              <artifactId>gt-jdbc-h2</artifactId>
            </exclusion>
            <exclusion>
              <groupId>org.geotools.jdbc</groupId>
              <artifactId>gt-jdbc-oracle</artifactId>
            </exclusion>
            <exclusion>
              <groupId>org.geotools.jdbc</groupId>
              <artifactId>gt-jdbc-sqlserver</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
